kotlin version: 2.0.10
error message: Incremental compilation failed: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.base.ui.RespondDialog.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BaseFragment), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BottomNavigationViewSource), LookupSymbol(name=bindVacancy, scope=com.example.base.utils), LookupSymbol(name=Companion, scope=com.example.base.BottomNavigationViewSource), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.utils), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.ui.RespondDialog), LookupSymbol(name=Companion, scope=com.example.base.ui.RespondDialog), LookupSymbol(name=NavigationData, scope=com.example.base.utils), LookupSymbol(name=BottomNavigationViewSource, scope=com.example.base), LookupSymbol(name=instance, scope=com.example.base.BottomNavigationViewSource.Companion), LookupSymbol(name=toolbarTitle, scope=com.example.base.BaseFragment), LookupSymbol(name=VacanciesAdapter, scope=com.example.base.adapters), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BottomNavigationViewSource.Companion), LookupSymbol(name=BindfragmentKt, scope=com.example.base.utils), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.ui.RespondDialog.Companion), LookupSymbol(name=showRespondDialog, scope=com.example.base.ui.RespondDialog.Companion)], dirtyClassesFqNames=[com.example.base.BottomNavigationViewSource.Companion, com.example.base.adapters.VacanciesAdapter, com.example.base.ui.RespondDialog.Companion, com.example.base.ui.RespondDialog, com.example.base.BottomNavigationViewSource, com.example.base.BaseFragment, com.example.base.utils.NavigationData, com.example.base.utils.BindfragmentKt, com.example.base.utils], dirtyClassesFqNamesForceRecompile=[])
java.lang.IllegalStateException: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.base.ui.RespondDialog.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BaseFragment), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BottomNavigationViewSource), LookupSymbol(name=bindVacancy, scope=com.example.base.utils), LookupSymbol(name=Companion, scope=com.example.base.BottomNavigationViewSource), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.utils), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.ui.RespondDialog), LookupSymbol(name=Companion, scope=com.example.base.ui.RespondDialog), LookupSymbol(name=NavigationData, scope=com.example.base.utils), LookupSymbol(name=BottomNavigationViewSource, scope=com.example.base), LookupSymbol(name=instance, scope=com.example.base.BottomNavigationViewSource.Companion), LookupSymbol(name=toolbarTitle, scope=com.example.base.BaseFragment), LookupSymbol(name=VacanciesAdapter, scope=com.example.base.adapters), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.BottomNavigationViewSource.Companion), LookupSymbol(name=BindfragmentKt, scope=com.example.base.utils), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.base.ui.RespondDialog.Companion), LookupSymbol(name=showRespondDialog, scope=com.example.base.ui.RespondDialog.Companion)], dirtyClassesFqNames=[com.example.base.BottomNavigationViewSource.Companion, com.example.base.adapters.VacanciesAdapter, com.example.base.ui.RespondDialog.Companion, com.example.base.ui.RespondDialog, com.example.base.BottomNavigationViewSource, com.example.base.BaseFragment, com.example.base.utils.NavigationData, com.example.base.utils.BindfragmentKt, com.example.base.utils], dirtyClassesFqNamesForceRecompile=[])
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.toProgramSymbols(ClasspathChangesComputer.kt:381)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeFineGrainedKotlinClassChanges(ClasspathChangesComputer.kt:281)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeKotlinClassChanges(ClasspathChangesComputer.kt:181)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClassChanges(ClasspathChangesComputer.kt:154)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeChangedAndImpactedSet(ClasspathChangesComputer.kt:104)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:72)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:194)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:132)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


